[{"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\App.js":"1","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\index.js":"2","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\routes\\About.js":"3","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\routes\\Home.js":"4","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\components\\Movie.js":"5","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\components\\Navigation.js":"6","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\routes\\Detail.js":"7"},{"size":2838,"mtime":1611795425156,"results":"8","hashOfConfig":"9"},{"size":146,"mtime":1611704729038,"results":"10","hashOfConfig":"9"},{"size":110,"mtime":1611793841345,"results":"11","hashOfConfig":"9"},{"size":1721,"mtime":1612394470170,"results":"12","hashOfConfig":"9"},{"size":1786,"mtime":1612395034418,"results":"13","hashOfConfig":"9"},{"size":859,"mtime":1612310634899,"results":"14","hashOfConfig":"9"},{"size":5471,"mtime":1612396873151,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"13wlu9v",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\App.js",[],["33","34"],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\index.js",[],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\routes\\About.js",[],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\routes\\Home.js",[],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\components\\Movie.js",["35"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { Link } from 'react-router-dom';\r\nfunction Movie({ id, year, title, summary, poster, backdrop_path, rating }) {\r\n    const onlyYear = year.substr(0, 4);\r\n    return (\r\n        <div className=\"movie\">\r\n            <div className=\"movie__poster\">\r\n                <img src={`https://image.tmdb.org/t/p/w500${poster}`} alt={title} title={title} />\r\n            </div>\r\n            <div className=\"movie__data\">\r\n                <Link\r\n                    // to={`/movie/${id}`}\r\n                    to={{\r\n                        pathname: `/movie/${id}`,\r\n                        state: {\r\n                            id,\r\n                            // onlyYear,\r\n                            // title,\r\n                            // summary,\r\n                            // poster,\r\n                            // backdrop_path,\r\n                            // rating,\r\n                        },\r\n                    }}\r\n                >\r\n                    <h3 className=\"movie__title\">\r\n                        {title} ({onlyYear})\r\n                    </h3>\r\n                </Link>\r\n                <h4 className=\"movie__rating\">\r\n                    üèÜ <span>{rating} / 10</span>\r\n                </h4>\r\n                <p className=\"movie__summary\">{summary.length > 140 ? summary.slice(0, 140) + '...' : summary}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\components\\Navigation.js",[],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\routes\\Detail.js",["36","37","38"],"import React, { Component } from 'react';\r\nimport './Detail.css';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nclass Detail extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        movie: {},\r\n        similars: [],\r\n    };\r\n\r\n    getMovie = async (id) => {\r\n        const { data } = await axios.get(\r\n            `https://api.themoviedb.org/3/movie/${id}?api_key=ffe228ac6463158a2c4230ff91248853&language=en-US`\r\n        );\r\n\r\n        const {\r\n            data: { results },\r\n        } = await axios.get(\r\n            `https://api.themoviedb.org/3/movie/${id}/similar?api_key=ffe228ac6463158a2c4230ff91248853&language=en-US&page=1`\r\n        );\r\n\r\n        console.log(results);\r\n        this.setState({ movie: data, similars: results, isLoading: false });\r\n    };\r\n    componentDidMount() {\r\n        const { location, history } = this.props;\r\n        if (location.state === undefined) {\r\n            history.push('/');\r\n        }\r\n        this.getMovie(location.state.id);\r\n    }\r\n    render() {\r\n        const { isLoading, movie, similars } = this.state;\r\n        // console.log(movie);\r\n        return (\r\n            <div>\r\n                {isLoading ? (\r\n                    <div className=\"loader\">\r\n                        <span className=\"loader__text\">Loading...</span>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"detail__container\">\r\n                        <div\r\n                            className=\"detail__backdrop\"\r\n                            style={{\r\n                                background: `url(https://image.tmdb.org/t/p/w500${movie.backdrop_path}) no-repeat center center/contain`,\r\n                            }}\r\n                        >\r\n                            {/* <img src={`https://image.tmdb.org/t/p/w500${backdrop_path}`} alt={title} title={title} /> */}\r\n                        </div>\r\n\r\n                        <div className=\"detail__poster\">\r\n                            <div className=\"poster__header\">\r\n                                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} title={movie.title} />\r\n                                <div className=\"potser__data\">\r\n                                    <h1 className=\"data__title\">{movie.title}</h1>\r\n                                    <h3 className=\"data__year\">\r\n                                        {movie.release_date.slice(0, 4)} ‚Ä¢{' '}\r\n                                        {movie.production_countries ? movie.production_countries.map((country) => country.name) : null}\r\n                                    </h3>\r\n                                    <h3 className=\"data__rating\">‚≠ê {movie.vote_average} / 10</h3>\r\n                                    <a href={movie.homepage} className=\"data_homepage\">\r\n                                        üé¨ Homepage\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"detail__contents\">\r\n                            <h2 className=\"basic_info\">üé• Info</h2>\r\n                            <h3 className=\"info__title\">{movie.title}</h3>\r\n                            <p className=\"info__date_country\">\r\n                                {movie.release_date.slice(0, 4)} ‚Ä¢{' '}\r\n                                {movie.production_countries ? movie.production_countries.map((country) => country.name) : null}\r\n                            </p>\r\n                            {movie.genres\r\n                                ? movie.genres.map((genre) => (\r\n                                      <span className=\"info__genre\" key={genre.id}>\r\n                                          {' '}\r\n                                          #{genre.name}{' '}\r\n                                      </span>\r\n                                  ))\r\n                                : null}\r\n                            <p>\r\n                                {Math.floor(movie.runtime / 60)}ÏãúÍ∞Ñ {movie.runtime % 60}Î∂Ñ\r\n                            </p>\r\n                            <p className=\"info__overview\">{movie.overview}</p>\r\n                            <h2>üé• Similar Movies</h2>\r\n                            <div className=\"detail__similars\">\r\n                                {similars.map((movie) => (\r\n                                    <div key={movie.id} className=\"similar\">\r\n                                        <div className=\"similar__poster\">\r\n                                            <img\r\n                                                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                                                alt={movie.title}\r\n                                                title={movie.title}\r\n                                            />\r\n                                        </div>\r\n                                        <span className=\"similar__title\">{movie.title}</span>\r\n                                        <span className=\"similar__rating\">‚≠ê {movie.vote_average} / 10</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Detail;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"47","line":4,"column":8,"nodeType":"45","messageId":"46","endLine":4,"endColumn":13},{"ruleId":"43","severity":1,"message":"48","line":5,"column":10,"nodeType":"45","messageId":"46","endLine":5,"endColumn":14},{"ruleId":"43","severity":1,"message":"49","line":5,"column":16,"nodeType":"45","messageId":"46","endLine":5,"endColumn":24},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Movie' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]