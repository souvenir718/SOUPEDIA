[{"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\App.js":"1","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\index.js":"2","C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\Movie.js":"3"},{"size":3853,"mtime":1611791491552,"results":"4","hashOfConfig":"5"},{"size":146,"mtime":1611704729038,"results":"6","hashOfConfig":"5"},{"size":1193,"mtime":1611791672403,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"13wlu9v",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\App.js",["17"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\n/*\nhttps://dribbble.com/shots/2442798-Movie-Application\n*/\n\n// 앞에 수업에서 배운 이론.\n/*\nconst foodILike = [\n    {\n        id: 1,\n        name: 'Kimchi',\n        image: 'http://aeriskitchen.com/wp-content/uploads/2008/09/kimchi_bokkeumbap_02-.jpg',\n        rating: 5,\n    },\n    {\n        id: 2,\n        name: 'Samgyeopsal',\n        image: 'https://3.bp.blogspot.com/-hKwIBxIVcQw/WfsewX3fhJI/AAAAAAAAALk/yHxnxFXcfx4ZKSfHS_RQNKjw3bAC03AnACLcBGAs/s400/DSC07624.jpg',\n        rating: 3.5,\n    },\n    {\n        id: 3,\n        name: 'Bibimbap',\n        image:\n            'http://cdn-image.myrecipes.com/sites/default/files/styles/4_3_horizontal_-_1200x900/public/image/recipes/ck/12/03/bibimbop-ck-x.jpg?itok=RoXlp6Xb',\n        rating: 4.4,\n    },\n    {\n        id: 4,\n        name: 'Doncasu',\n        image: 'https://s3-media3.fl.yelpcdn.com/bphoto/7F9eTTQ_yxaWIRytAu5feA/ls.jpg',\n        rating: 3.1,\n    },\n    {\n        id: 5,\n        name: 'Kimbap',\n        image: 'http://cdn2.koreanbapsang.com/wp-content/uploads/2012/05/DSC_1238r-e1454170512295.jpg',\n        rating: 3.2,\n    },\n];\n\nfunction Food({ name, picture, rating }) {\n    return (\n        <div>\n            <h2>I like {name}</h2>\n            <h4>{rating} / 5.0</h4>\n            <img src={picture} alt={name} />\n        </div>\n    );\n}\n\nFood.propTypes = {\n    name: PropTypes.string.isRequired,\n    picture: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n};\n\nfunction App() {\n    return (\n        <div>\n            {foodILike.map((dish) => (\n                <Food key={dish.id} name={dish.name} picture={dish.image} rating={dish.rating} />\n            ))}\n        </div>\n    );\n}\n\n\nclass App extends React.Component {\n    state = {\n        count: 0,\n    };\n\n    add = () => {\n        // this.setState({\n        //     count: this.state.count + 1,\n        // });\n        this.setState((current) => ({ count: current.count + 1 }));\n    };\n    minus = () => {\n        this.setState({\n            count: this.state.count - 1,\n        });\n    };\n    render() {\n        return (\n            <div>\n                <h1>Hello, {this.state.count}</h1>\n                <button onClick={this.add}>Add</button>\n                <button onClick={this.minus}>Minus</button>\n            </div>\n        );\n    }\n}\n*/\n\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [],\n    };\n\n    getMovies = async () => {\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n        this.setState({ movies, isLoading: false });\n    };\n\n    componentDidMount() {\n        this.getMovies();\n    }\n    render() {\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ? (\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div>\n                ) : (\n                    <div className=\"movies\">\n                        {movies.map((movie) => (\n                            <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        ))}\n                    </div>\n                )}\n            </section>\n        );\n    }\n}\nexport default App;\n",["18","19"],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\index.js",[],"C:\\Users\\INNOGRID\\Desktop\\subin\\movie_app\\src\\Movie.js",["20"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <p className=\"movie__summary\">{summary.length > 140 ? summary.slice(0, 140) + '...' : summary}</p>\r\n                <ul className=\"geners\">\r\n                    {genres.map((genere, idx) => (\r\n                        <li key={idx} className=\"generes__genre\">\r\n                            {genere}\r\n                        </li>\r\n                    ))}\r\n                </ul>{' '}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n",{"ruleId":"21","severity":1,"message":"22","line":2,"column":8,"nodeType":"23","messageId":"24","endLine":2,"endColumn":17},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"21","severity":1,"message":"29","line":1,"column":17,"nodeType":"23","messageId":"24","endLine":1,"endColumn":26},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["30"],"no-negated-in-lhs",["31"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]